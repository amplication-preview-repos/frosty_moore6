datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Content {
  author    String?
  body      String?
  createdAt DateTime           @default(now())
  id        String             @id @default(cuid())
  status    EnumContentStatus?
  title     String?
  updatedAt DateTime           @updatedAt
}

model Booking {
  bookingDate DateTime?
  createdAt   DateTime           @default(now())
  id          String             @id @default(cuid())
  status      EnumBookingStatus?
  totalAmount Float?
  updatedAt   DateTime           @updatedAt
  user        User?              @relation(fields: [userId], references: [id])
  userId      String?
}

model Customer {
  createdAt DateTime @default(now())
  email     String?
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  notes     String?
  phone     String?
  updatedAt DateTime @updatedAt
}

model Search {
  createdAt   DateTime @default(now())
  id          String   @id @default(cuid())
  queryText   String?
  resultCount Int?
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model User {
  bookings  Booking[]
  createdAt DateTime      @default(now())
  email     String?       @unique
  firstName String?
  id        String        @id @default(cuid())
  lastName  String?
  password  String
  profile   Json?
  role      EnumUserRole?
  roles     Json
  searches  Search[]
  updatedAt DateTime      @updatedAt
  username  String        @unique
}

enum EnumContentStatus {
  Option1
}

enum EnumBookingStatus {
  Option1
}

enum EnumUserRole {
  Option1
}
